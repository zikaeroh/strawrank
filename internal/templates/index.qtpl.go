// Code generated by qtc from "index.qtpl"; DO NOT EDIT.
// See https://github.com/valyala/quicktemplate for details.

package templates

import (
	qtio422016 "io"

	qt422016 "github.com/valyala/quicktemplate"
)

var (
	_ = qtio422016.Copy
	_ = qt422016.AcquireByteBuffer
)

type IndexPage struct {
	BasePage
	CSRF string
}

func (p *IndexPage) StreamPageTitle(qw422016 *qt422016.Writer) {
	qw422016.N().S(`
	StrawRank
`)
}

func (p *IndexPage) WritePageTitle(qq422016 qtio422016.Writer) {
	qw422016 := qt422016.AcquireWriter(qq422016)
	p.StreamPageTitle(qw422016)
	qt422016.ReleaseWriter(qw422016)
}

func (p *IndexPage) PageTitle() string {
	qb422016 := qt422016.AcquireByteBuffer()
	p.WritePageTitle(qb422016)
	qs422016 := string(qb422016.B)
	qt422016.ReleaseByteBuffer(qb422016)
	return qs422016
}

func (p *IndexPage) StreamPageMeta(qw422016 *qt422016.Writer) {
	qw422016.N().S(`
	<style>
        #choice-inputs div:only-child .remove {
            display: none;
        }
    </style>
`)
}

func (p *IndexPage) WritePageMeta(qq422016 qtio422016.Writer) {
	qw422016 := qt422016.AcquireWriter(qq422016)
	p.StreamPageMeta(qw422016)
	qt422016.ReleaseWriter(qw422016)
}

func (p *IndexPage) PageMeta() string {
	qb422016 := qt422016.AcquireByteBuffer()
	p.WritePageMeta(qb422016)
	qs422016 := string(qb422016.B)
	qt422016.ReleaseByteBuffer(qb422016)
	return qs422016
}

func (p *IndexPage) StreamPageBody(qw422016 *qt422016.Writer) {
	qw422016.N().S(`
    <div class="px-3 py-3 pt-md-5 pb-md-4 mx-auto text-center">
        <h1 class="mb-3">Create your own poll!</h1>

        <p>
            Type your question and choices below.
            Voters will be able to choose and rank them as they prefer.
        </p>

        <p>
            Order does not matter; choices will be randomized on the voting page.
        </p>
    </div>

    <div class="row justify-content-center">
        <div class="col-8">
            <form method="POST" autocomplete="off">
                <div class="form-group input-group-lg mb-5">
                    <input name="question" class="form-control" type="text" placeholder="Type your question here" required maxlength="100">
                </div>
                
                <div id="choice-inputs">
                    `)
	p.StreamChoice(qw422016)
	qw422016.N().S(`
                    `)
	p.StreamChoice(qw422016)
	qw422016.N().S(`
                </div>

                <div class="form-group d-flex mb-5">
                    <div class="mr-auto"></div>
                    <button class="btn btn-secondary ml-auto" onclick="addAnother(); return false">Add another choice</button>
                </div>

                <div class="form-group d-flex flex-row">
                    <div class="d-flex">
                        <label class="col-auto justify-content-center align-self-center" for="check-mode">Duplicate vote check mode:</label>
                    </div>
                    <select class="form-control col" id="check-mode" name="checkMode">
                        <option value="none">None</option>
                        <option value="ip">IP</option>
                        <option value="cookie" selected>Cookie</option>
                        <option value="ip_and_cookie">IP and cookie</option>
                    </select>
                </div>

                <div class="form-group d-flex">
                    <button class="btn btn-primary" id="submit-button" type="submit">Submit</button>
                    <div class="ml-3 mr-auto d-flex invisible" id="submit-warning">
                        <span class="text-danger justify-content-center align-self-center">More than one choice must be specified.</span>
                    </div>
                </div>

                `)
	qw422016.N().S(p.CSRF)
	qw422016.N().S(`
            </form>
        </div>
    </div>
`)
}

func (p *IndexPage) WritePageBody(qq422016 qtio422016.Writer) {
	qw422016 := qt422016.AcquireWriter(qq422016)
	p.StreamPageBody(qw422016)
	qt422016.ReleaseWriter(qw422016)
}

func (p *IndexPage) PageBody() string {
	qb422016 := qt422016.AcquireByteBuffer()
	p.WritePageBody(qb422016)
	qs422016 := string(qb422016.B)
	qt422016.ReleaseByteBuffer(qb422016)
	return qs422016
}

func (p *IndexPage) StreamPageScripts(qw422016 *qt422016.Writer) {
	qw422016.N().S(`
    <script>
        var count = 2;

        var updateSubmit = function() {
            if (count < 2) {
                $("#submit-button").attr("disabled", true);
                $("#submit-warning").removeClass("invisible");
            } else {
                $("#submit-button").removeAttr("disabled");
                $("#submit-warning").addClass("invisible");
            }
        };

        function addAnother() {
            $("#choice-inputs").append("`)
	{
		qb422016 := qt422016.AcquireByteBuffer()
		p.WriteChoice(qb422016)
		qw422016.N().JZ(qb422016.B)
		qt422016.ReleaseByteBuffer(qb422016)
	}
	qw422016.N().S(`");
            count++;
            updateSubmit();
        }

        function removeChoice(e) {
            var tooltip = $(e).attr("aria-describedby");
            $(e).parent().parent().remove();
            $("#"+tooltip).remove();
            count--;
            updateSubmit();
        }

        $(document).ready(function() {
            $('[data-toggle="tooltip"]').tooltip();
        });
    </script>
`)
}

func (p *IndexPage) WritePageScripts(qq422016 qtio422016.Writer) {
	qw422016 := qt422016.AcquireWriter(qq422016)
	p.StreamPageScripts(qw422016)
	qt422016.ReleaseWriter(qw422016)
}

func (p *IndexPage) PageScripts() string {
	qb422016 := qt422016.AcquireByteBuffer()
	p.WritePageScripts(qb422016)
	qs422016 := string(qb422016.B)
	qt422016.ReleaseByteBuffer(qb422016)
	return qs422016
}

func (p *IndexPage) StreamChoice(qw422016 *qt422016.Writer) {
	qw422016.N().S(`<div class="input-group mb-3"><input name="choice" class="form-control" type="text" placeholder="Choice" required maxlength="50"><div class="input-group-append remove"><button class="btn btn-warning" type="button" onclick="removeChoice(this); return false" tabindex="-1" data-toggle="tooltip" data-placement="right" title="Remove"><i class="fa fa-times"></i></button></div></div>`)
}

func (p *IndexPage) WriteChoice(qq422016 qtio422016.Writer) {
	qw422016 := qt422016.AcquireWriter(qq422016)
	p.StreamChoice(qw422016)
	qt422016.ReleaseWriter(qw422016)
}

func (p *IndexPage) Choice() string {
	qb422016 := qt422016.AcquireByteBuffer()
	p.WriteChoice(qb422016)
	qs422016 := string(qb422016.B)
	qt422016.ReleaseByteBuffer(qb422016)
	return qs422016
}
